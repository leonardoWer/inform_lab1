# Отчёт по лабе1 Левахин Лев 343730 КЗ140
*Второй раз запустил линукс..*

## Ход работы:
1) Посмотрел вторую и третью лекцию, законспектировал.

2) Начал работать над алгоритмом:  
1. Сначала нужно считать айпи адрес от пользователя, сделаем это с помощью команды read. Назовём переменную с ней ip. Перед этим выведем в консоль, чтобы пользователь ввёл айпи.  
2. Напишем основную функцию. Она будет принимать на вход айпи и обрабатывать его. Первым делом разделим строку с айпи на 4 переменные. 
Для этого укажем разделитель в специальную переменную, далее с помощью команды read и ключа -r считаем айпи без учёта точек и обратных слешей(\)
Зададим названия для 4 переменных, передадим в них результат с помощью <<<.
Далее, выведем в консоль результат обработки переменных, чтобы удостовериться, что на этом этапе всё обработалось правильно.
Переёдем к написанию следующей функции.  

3) Напишем функцию, которая будет делать из числа в 10сс октет, тоесть число в 2 системе счисления, состоящее из 8 символов.
Эта функция заняла у меня болбше всего времени, потому что первый её вариант долго не работал. Я всячески пытался решить проблему, но у меня не получилось, поэтому пришлось искать другое решение. Чтобы перейти к написанию, пришлось просмотреть много материалов с разных сайтов, в основном stackoverflow.
Создаём локальную переменную, в которой запишем айпи адрес в 2сс, для этого воспользуемся командой obase=2 и встроенным калькулятором bs. Воспользовавшись echo вернём результат в переменную.
Далеее, приведем полученную переменнную к строке, содержащей 8 цифр. Для этого заполним нулевые нулями оставшиеся нулевые значения от числа. Вернём полученный результат.  

4) Вернёмся к основной функции. В ней создадим 4 новых переменные, которым будем присваивать результат работы функции to_oct от соответствующего значения.  

5) Выведем результат работы функции пользователю.  


*Вывод по работе:*
Я изучил как работают функции, как работать с переменнными и массивами, как считывать строку, как переводить число в 2сс, как можно разделить строку.

